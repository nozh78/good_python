# Подвиг 1
# m = '''1. Введение в Python
# 2. Строки и списки
# 3. Условные операторы
# 4. Циклы
# 5. Словари, кортежи и множества
# 6. Выход'''
# item = int(input())
# if item == 1:
#     print('Введение в Python')
# elif item == 2:
#     print('Строки и списки')
# elif item == 3:
#     print('Условные операторы')
# elif item == 4:
#     print('Циклы')
# elif item == 5:
#     print('Словари, кортежи и множества')
# else:
#     print('Выход')

# Подсказочка:)
# 1. Конвертируем строку m в список lst. Разделитель - перенос строки: lst = list(m.split('\n'))
# 2. Создаем переменную для ввода числа (num)
# 2. Используем операторы if/elif/else. В каждом блоке пишем: если переменная num == х (например,  х=1), то напечатать индекс списка равный х -1     (lst[0]).

# m = '''1. Введение в Python
# 2. Строки и списки
# 3. Условные операторы
# 4. Циклы
# 5. Словари, кортежи и множества
# 6. Выход'''
# lst = list(m.split('\n'))
# item = int(input())
# if item == 1:
#     print(lst[0])
# elif item == 2:
#     print(lst[1])
# elif item == 3:
#     print(lst[2])
# elif item == 4:
#     print(lst[3])
# elif item == 5:
#     print(lst[4])
# else:
#     print(lst[5])
# print(lst)

# Подвиг 6
# days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
# m, n = map(int, input().split())
# if 1 <= m < 13:            # если месяц больше или равен 1 и меньше 13, то выполняются следующие действия
#     # если "день(n)" больше одного и меньше значения элемента списка days с индексом[m-1], то
#     if 1 < n < days[m-1]:
#         n_1 = n-1        # предыдущий день равен
#         m_1 = m          # месяц предыдущего дня равен
#         n_2 = n + 1      # последующий день равен
#         m_2 = m          # месяц последующего дня равен
#     elif n == 1:         # если "день(n)" равен 1, то
#         # предыдущий день равен значению элемента списка days с индексом[m-1-1](предыдущий месяц)
#         n_1 = days[m-1-1]
#         m_1 = m-1        # месяц предыдущего дня равен
#         n_2 = n+1        # последующий день равен
#         m_2 = m          # месяц последующего дня равен
#     elif n == days[m-1]:  # если "день(n)" равен последнему дню в месяце
#         n_1 = n-1        # предыдущий день равен
#         m_1 = m          # месяц предыдущего дня равен
#         n_2 = 1          # последующий день равен
#         m_2 = m+1        # месяц последующего дня равен
# # выводим на печать значения преобразованные в стоку(str) и с выравниванием по левому краю с минимальной шириной строки 2 символа и заполнением пробелов "0"
# print(f"{str(m_1).rjust(2,'0')}.{str(n_1).rjust(2,'0')} {str(m_2).rjust(2,'0')}.{str(n_2).rjust(2,'0')}")

# Подвиг 7
# import datetime
# Считываем входящее число - k-й день невисокосного года, в формате разницы времени.
# time_delta = datetime.timedelta(days=int(input())-1)
# Задаем текущую дату (2007 год - невисокосный, начинающийся с понедельника).
# date_today = datetime.datetime(2007, 1, 1) + time_delta
# Создаем словарь наименований дня недели.
# days_week = {0: 'воскресенье', 1: 'понедельник', 2: 'вторник',
#              3: 'среда', 4: 'четверг', 5: 'пятница', 6: 'суббота'}
# Выводим результат - день недели k-го дня.
# print(days_week[int(date_today.strftime('%w'))])

# ------------------------------------------------------------------------------
# n = int(input())
# lst = ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресенье',]
# print(lst[n % 7 - 1])
